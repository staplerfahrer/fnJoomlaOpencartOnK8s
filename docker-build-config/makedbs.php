<?php
function attemptRestoreAndRename($sqlFileName, $dbName, $stderr)
{
	if (file_exists($sqlFileName))
	{
		fwrite($stderr, "Restoring {$sqlFileName} to database {$dbName}...\n");
		$errors = restoreDatabaseTables(getenv('MYSQL_HOST'), getenv('MYSQL_USER'), getenv('MYSQL_PASSWORD'), $dbName, $sqlFileName);
		fwrite($stderr, $errors);
		if (!$errors)
		{
			fwrite($stderr, "Renaming {$sqlFileName}.\n");
			rename($sqlFileName, $sqlFileName.'.bak');
		}
	}
	else
	{
		fwrite($stderr, "NOT restoring {$sqlFileName}, the file is unavailable or has already been restored.\n");
	}
}

/**
 * @function    restoreDatabaseTables
 * @author      CodexWorld
 * @link        http://www.codexworld.com
 * @usage       Restore database tables from a SQL file
 */
function restoreDatabaseTables($dbHost, $dbUsername, $dbPassword, $dbName, $filePath)
{
	$db = new mysqli($dbHost, $dbUsername, $dbPassword, $dbName); 

	$error = '';

	$sqlLine = '';
	$fileLine = '';
	$sqlFile = fopen($filePath, 'r');
	while(!feof($sqlFile))
	{
		$fileLine = fgets($sqlFile);

		if(substr(trim($fileLine), 0, 2) == '--' || trim($fileLine) == '')
		{
			// Skip the comment
			continue;
		}
		
		// Add this line to the current segment
		$sqlLine .= $fileLine;
		
		if (substr(trim($sqlLine), -1, 1) == ';')
		{
			// Fix duplicate keys generated by Joomla or its plugins
			$sqlLine = str_replace('INSERT INTO ', 'INSERT IGNORE INTO ', $sqlLine);
			// Semicolon at the end, run the query
			if(!$db->query($sqlLine))
			{
				$error .= 'Error performing query "' . $sqlLine . '": ' . $db->error . "\n\n";
			}
			
			// Reset temp variable to empty
			$sqlLine = '';
		}
	}
	fclose($sqlFile);
	
	return $error;
}

$stderr = fopen('php://stderr', 'w');
fwrite($stderr, "\nEnsuring Joomla database is present\n");

$maxTries = 20;
do 
{
	fwrite($stderr, "Create DB attempts left: {$maxTries}...\n");
	$mysql = new mysqli(getenv('MYSQL_HOST'), 'root', getenv('MYSQL_ROOT_PASSWORD'), 'mysql');
	if ($mysql->connect_error) 
	{
		fwrite($stderr, "MySQL connection error: ({$mysql->connect_errno}) {$mysql->connect_error}\n");
		$maxTries--;
		if ($maxTries == 0)
		{
			exit(1);
		}
		sleep(3);
	}
} while ($mysql->connect_error);

fwrite($stderr, "Creating user and databases...\n");
fwrite($stderr, '1: '.($mysql->query('CREATE USER IF NOT EXISTS '.getenv('MYSQL_USER').' IDENTIFIED BY "'.getenv('MYSQL_PASSWORD').'"')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '2: '.($mysql->query('CREATE DATABASE IF NOT EXISTS `'.getenv('DB_NAME_JOOMLA').'`')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '3: '.($mysql->query('CREATE DATABASE IF NOT EXISTS `'.getenv('DB_NAME_OPENCART').'`')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '4: '.($mysql->query('CREATE DATABASE IF NOT EXISTS `'.getenv('DB_NAME_FISHNET').'`')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '5: '.($mysql->query('GRANT ALL PRIVILEGES ON `'.getenv('DB_NAME_JOOMLA').'`.* TO "'.getenv('MYSQL_USER').'"@"%"')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '6: '.($mysql->query('GRANT ALL PRIVILEGES ON `'.getenv('DB_NAME_OPENCART').'`.* TO "'.getenv('MYSQL_USER').'"@"%"')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
fwrite($stderr, '7: '.($mysql->query('GRANT ALL PRIVILEGES ON `'.getenv('DB_NAME_FISHNET').'`.* TO "'.getenv('MYSQL_USER').'"@"%"')?'ok':'failed')."\n");
fwrite($stderr, $mysql->error."\n");
$mysql->close();

$db_joomla = '/var/joomla-opencart-mysql-config/db_fishnet2_joomla.sql';
attemptRestoreAndRename($db_joomla, getenv('DB_NAME_JOOMLA'), $stderr);

$db_opencart = '/var/joomla-opencart-mysql-config/db_fishnet2_opencart.sql';
attemptRestoreAndRename($db_opencart, getenv('DB_NAME_OPENCART'), $stderr);

$db_fishnet = '/var/joomla-opencart-mysql-config/db_fishnet2_fishnet.sql';
attemptRestoreAndRename($db_fishnet, getenv('DB_NAME_FISHNET'), $stderr);

fclose($stderr);